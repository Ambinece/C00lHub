local MainLibrary = {}

function MainLibrary:CreateUI(title)
    local Gui = Instance.new("ScreenGui")
    Gui.Name = "C00lGUI"
    Gui.ResetOnSpawn = false
    Gui.Parent = game.CoreGui

    -- Toggle Frame/Button (to hide/show main UI)
    local ToggleMove = Instance.new("Frame")
    ToggleMove.Size = UDim2.new(0, 60, 0, 38)
    ToggleMove.Position = UDim2.new(0, 10, 0, 10)
    ToggleMove.BackgroundTransparency = 0.95
    ToggleMove.Active = true
    ToggleMove.Draggable = true
    ToggleMove.Parent = Gui

    local ToggleButton = Instance.new("TextButton")
    ToggleButton.Size = UDim2.new(0, 30, 0, 30)
    ToggleButton.Position = UDim2.new(0, 10, 0, 4)
    ToggleButton.Text = "<"
    ToggleButton.TextColor3 = Color3.new(1, 1, 1)
    ToggleButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    ToggleButton.BorderColor3 = Color3.fromRGB(255, 0, 0)
    ToggleButton.BorderSizePixel = 3
    ToggleButton.Parent = ToggleMove

    -- TopBar
    local TopBar = Instance.new("Frame")
    TopBar.Name = "TopBar"
    TopBar.Size = UDim2.new(0, 500, 0, 35)
    TopBar.Position = UDim2.new(0.25, 0, 0.1, 0)
    TopBar.BackgroundColor3 = Color3.new(0, 0, 0)
    TopBar.BorderColor3 = Color3.fromRGB(255, 0, 0)
    TopBar.BorderSizePixel = 3
    TopBar.Parent = Gui
    TopBar.Active = true
    TopBar.Draggable = true

    local TitleLabel = Instance.new("TextLabel")
    TitleLabel.Size = UDim2.new(1, 0, 1, 0)
    TitleLabel.BackgroundTransparency = 1
    TitleLabel.Text = title or "C00lGUI"
    TitleLabel.TextColor3 = Color3.new(1, 1, 1)
    TitleLabel.Font = Enum.Font.SourceSansBold
    TitleLabel.TextSize = 22
    TitleLabel.Parent = TopBar

    -- Close Button
    local CloseButton = Instance.new("TextButton")
    CloseButton.Size = UDim2.new(0, 30, 0, 30)
    CloseButton.Position = UDim2.new(1, -35, 0, 2)
    CloseButton.Text = "X"
    CloseButton.TextColor3 = Color3.new(1, 1, 1)
    CloseButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    CloseButton.BorderColor3 = Color3.new(1, 0, 0)
    CloseButton.BorderSizePixel = 5
    CloseButton.Parent = TopBar

    CloseButton.MouseButton1Click:Connect(function()
        Gui:Destroy()
    end)

    -- Button Holder (Main area under TopBar)
    local ButtonHolder = Instance.new("Frame")
    ButtonHolder.Name = "ButtonHolder"
    ButtonHolder.Size = UDim2.new(1, 0, 0, 450)
    ButtonHolder.Position = UDim2.new(0, 0, 1, 0)
    ButtonHolder.BackgroundColor3 = Color3.new(0, 0, 0)
    ButtonHolder.BorderColor3 = Color3.fromRGB(255, 0, 0)
    ButtonHolder.BorderSizePixel = 3
    ButtonHolder.Parent = TopBar

    -- UIListLayout
    local Layout = Instance.new("UIListLayout")
    Layout.Padding = UDim.new(0, 5)
    Layout.SortOrder = Enum.SortOrder.LayoutOrder
    Layout.Parent = ButtonHolder

    -- Toggle Show/Hide
    ToggleButton.MouseButton1Click:Connect(function()
        local visible = ButtonHolder.Visible
        ButtonHolder.Visible = not visible
        ToggleButton.Text = visible and ">" or "<"
    end)

    local ToggleState = {}

    local Interface = {}

    function Interface:CreateButton(name, callback)
        local Button = Instance.new("TextButton")
        Button.Size = UDim2.new(1, -10, 0, 40)
        Button.Text = name
        Button.TextColor3 = Color3.new(1, 1, 1)
        Button.BackgroundColor3 = Color3.new(0, 0, 0)
        Button.BorderColor3 = Color3.new(1, 0, 0)
        Button.Parent = ButtonHolder

        Button.MouseButton1Click:Connect(function()
            pcall(callback)
        end)
    end

    function Interface:CreateToggle(name, callback)
        local state = false
        local toggle = Instance.new("TextButton")
        toggle.Size = UDim2.new(1, -10, 0, 40)
        toggle.Text = name .. ": Off"
        toggle.TextColor3 = Color3.new(1, 1, 1)
        toggle.BackgroundColor3 = Color3.new(0, 0, 0)
        toggle.BorderColor3 = Color3.new(1, 0, 0)
        toggle.Parent = ButtonHolder

        toggle.MouseButton1Click:Connect(function()
            state = not state
            toggle.Text = name .. ": " .. (state and "On" or "Off")
            pcall(callback, state)
        end)

        ToggleState[name] = state
    end

    return Interface
end

return MainLibrary
